version: '3.8'

services:
  metrics-app:
    build:
      context: ../../
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=development
      - METRICS_INTERVAL=2
      - METRICS_VARIANCE=0.8
    networks:
      - metrics-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ../../config/prometheus/prometheus.dev.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - metrics-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../config/grafana/provisioning:/etc/grafana/provisioning
      - ../../config/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - metrics-network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  metrics-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: 